name: Sync to Treehandmade Homepage

on:
  #   push:
  #     branches: [main]
  workflow_dispatch:

jobs:
  sync:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Template Repo
        uses: actions/checkout@v4
        with:
          ref: master # Ensures we are syncing from the master branch of the template

      - name: Set up Git Config
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"

      - name: Clone Target Repo (dev branch)
        run: |
          git clone --single-branch --branch dev https://x-access-token:${{ secrets.REPO_ACCESS_TOKEN }}@github.com/iCyanCorporation/treehandmade-homepage.git target-repo
          cd target-repo
          echo "Checking current branch in target-repo..."
          current_branch=$(git rev-parse --abbrev-ref HEAD)
          echo "Current branch is: $current_branch"
          if [ "$current_branch" != "dev" ]; then
            echo "Error: Failed to clone or checkout the 'dev' branch from the target repository (iCyanCorporation/treehandmade-homepage)." >&2
            echo "Please ensure the 'dev' branch exists on that repository and has at least one commit." >&2
            exit 1
          fi
          echo "'dev' branch successfully cloned and checked out in target-repo."
          cd ..

      - name: Sync Selected Files
        run: |
          mkdir -p temp-sync
          rsync -av --files-from=.template-sync.txt ./ ./temp-sync/
          rsync -av --delete ./temp-sync/ ./target-repo/

      - name: Debug - Show git status after rsync
        run: |
          git status
          git diff --stat
        working-directory: target-repo

      - name: Commit and Push to Feature Branch
        id: commit_push
        working-directory: target-repo
        run: |
          git config --global --add safe.directory "$PWD"
          # Create a branch for changes based on current dev branch
          if [[ -n "$(git status --porcelain)" ]]; then
            # Create sync branch from current state (which should be dev)
            git checkout -B sync-from-template
            git add .
            git commit -m "chore: sync from template repo"
            git push origin sync-from-template --force
            # Verify the branch was pushed and has commits
            if git ls-remote --heads origin sync-from-template | grep sync-from-template; then
              echo "Branch sync-from-template was successfully pushed."
              echo "changes_pushed=true" >> $GITHUB_OUTPUT
              
              # Check if there are differences between dev and sync-from-template
              git fetch origin dev
              if git diff --quiet origin/dev sync-from-template; then
                echo "No differences between dev and sync-from-template branches."
                echo "has_differences=false" >> $GITHUB_OUTPUT
              else
                echo "Found differences between dev and sync-from-template branches."
                echo "has_differences=true" >> $GITHUB_OUTPUT
              fi
            else
              echo "Failed to push branch sync-from-template."
              echo "changes_pushed=false" >> $GITHUB_OUTPUT
            fi
          else
            echo "No changes to sync."
            echo "changes_pushed=false" >> $GITHUB_OUTPUT
          fi

      - name: Create Pull Request in Target Repo
        if: steps.commit_push.outputs.changes_pushed == 'true' && steps.commit_push.outputs.has_differences == 'true'
        run: |
          # Create pull request only if the branches have actual differences
          echo "Creating pull request from sync-from-template to dev..."
          gh pr create \
            --repo iCyanCorporation/treehandmade-homepage \
            --head sync-from-template \
            --base dev \
            --title "Sync from Template Repo" \
            --body "Automated sync from [nextjs-amplify-cms-template](https://github.com/iCyanCorporation/nextjs-amplify-cms-template)." || echo "Failed to create PR, likely because there are no changes or a PR already exists."
        env:
          GITHUB_TOKEN: ${{ secrets.REPO_ACCESS_TOKEN }}
        working-directory: target-repo
